from array import array

my_int_array = array('i', [1, 2, 3, 4, 5])

with open('my_array.bin', 'wb') as my_file:
    my_int_array.tofile(my_file)
    
imported_array = array('i')

with open('my_array.bin', 'rb') as my_file:
    imported_array.fromfile(my_file, 3)
    print(imported_array)
    

imported_array.reverse()
print(imported_array)

'''
Этот Python скрипт демонстрирует работу с массивами и файлами. 
Он использует модуль `array`, 
который предоставляет тип объекта, 
эффективно представляющего массив базовых значений.

Скрипт начинается с импорта модуля `array`. 
Затем он создает массив целых чисел (`'i'` тип кода) с именем `my_int_array` и инициализирует его значениями 1, 2, 3, 4 и 5.

Далее скрипт открывает бинарный файл с именем `my_array.bin` для записи (`'wb'` режим). 
Здесь используется оператор `with`, 
который гарантирует, 
что файл будет правильно закрыт после того, 
как он больше не понадобится. 
Затем метод `tofile()` объекта `array` используется для прямой записи всего массива в файл.

Скрипт затем создает еще один массив целых чисел с именем `imported_array`, 
но на этот раз он не инициализирует его никакими значениями.

Скрипт снова открывает `my_array.bin`, 
но на этот раз для чтения (`'rb'` режим). 
Метод `fromfile()` объекта `array` используется для прямого чтения данных из файла в массив. 
Второй аргумент `fromfile()` указывает, 
сколько элементов нужно прочитать из файла. 
В этом случае он читает первые 3 элемента. 
Затем состояние `imported_array` выводится на консоль.

Наконец, метод `reverse()` объекта `array` 
используется для изменения порядка элементов в `imported_array`, 
и перевернутый массив выводится на консоль.
'''